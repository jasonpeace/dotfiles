alias hist='history | grep $1' #Requires one input

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
colorflag="--color"
else # OS X `ls`
colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -l ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -la ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Gzip-enabled `curl`
alias gurl="curl --compressed"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en1"
alias ips="ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"

# Enhanced WHOIS lookups
alias whois="whois -h whois-servers.net"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# ROT13-encode text. Works for decoding, too! ;)
alias rot13='tr a-zA-Z n-za-mN-ZA-M'

# Empty the Trash on all mounted volumes and the main HDD
# Also, clear Apple’s System Logs to improve shell startup speed
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool YES && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool NO && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"


# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    alias "$method"="lwp-request -m '$method'"
done

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"
alias hax="growlnotify -a 'Activity Monitor' 'System error' -m 'WTF R U DOIN'"

#mine
alias subl='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'
alias fixdns='dscacheutil -flushcache'

#original mac ether b8:8d:12:2f:b5:72
#alias newMAC='ifconfig en0 ether 00:11:22:33:44:55'
alias newMAC="openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//' | xargs sudo ifconfig en1 ether "

##alias newHostname="sudo scutil --set HostName my_new_name"

alias killPYC='cd ~/src; find ./ -name "*.pyc" | xargs rm; cd -'
alias killORIG='cd ~/src; find ./ -name "*.orig" | xargs rm; cd -'
#alias nosetests='nosetests --processes=5 --process-timeout=90'

alias pgcli_local="pgcli -h localhost -p 5432 -U jasonpeace"

alias hginc="hg inc"

alias appNap_OFF="defaults write NSGlobalDomain NSAppSleepDisabled -bool YES"
alias appNap_ON="defaults write NSGlobalDomain NSAppSleepDisabled -bool NO"


function newHostname(){
	sudo scutil --set HostName "$1"
}

function ssrc () {
    cd ~/src/${1}
    echo -ne "\033]0;"${1}"\007"
}
complete -C "~/dotfiles/scripts/SrcCompletion" -o filenames -o nospace ssrc

complete -C "~/dotfiles/scripts/VirtCompletion" -o filenames -o nospace workon

function sssrc () {
    cd ~/src/${1}/${1}
}

function renametab () {
    echo -ne "\033]0;"$@"\007"
}

function firefox(){
    open -a Firefox "${1}"
}

alias workoff='deactivate'

function redot(){
    for file in ~/.{extra,bash_prompt,exports,aliases,functions,bash_profile}; do
    [ -r "$file" ] && source "$file"
    done
    unset file
}

function jd() {
nohup /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Commands/java -jar /Applications/JDownloader.app/Contents/java/app/JDownloader.jar  >/dev/null 2>&1 &
}

function m3u(){
    find . -name '*.m3u' -print0 | xargs -0 rm
    find . -iname '*.flac' -execdir bash -c 'file="{}"; printf "%s\n" "${file##*/}" >> "${PWD##*/}.m3u"' \;
    find . -iname '*.wav' -execdir bash -c 'file="{}"; printf "%s\n" "${file##*/}" >> "${PWD##*/}.m3u"' \;
    find . -iname '*.mp3' -execdir bash -c 'file="{}"; printf "%s\n" "${file##*/}" >> "${PWD##*/}.m3u"' \;
    find . -iname '*.m4a' -execdir bash -c 'file="{}"; printf "%s\n" "${file##*/}" >> "${PWD##*/}.m3u"' \;
}

function m3ud(){
    cd ~/Downloads
    m3u
    cd -
}

function pfd() {
  osascript 2>/dev/null <<EOF
    tell application "Finder"
      return POSIX path of (target of window 1 as alias)
    end tell
EOF
}

function cdf() {
  cd "$(pfd)"
}

function brewUpdatedToday(){
    cpath="/usr/local/Cellar/"
    count=`find $cpath -maxdepth 1 -type d -mtime -1 | wc -l`
    if [ "$count" -gt "0" ]
    then
        echo "Packages updated today:"
        list=`find $cpath -maxdepth 1 -type d -mtime -1`
        echo -e "${list//$cpath\//}"
    else
        echo "Nothing to see here. Move along."
    fi
}

function upbrew(){
    brew update -v
    brew upgrade -v
    brewUpdatedToday
}

function uppip(){
    if [[ "$VIRTUAL_ENV" != "" ]]
    then
        echo "In virtual-env:"
        echo " $VIRTUAL_ENV"
        pip install --upgrade pip setuptools virtualenv virtualenvwrapper
    else
        echo "running pip upgrade in sudo"
        sudo pip install --upgrade pip setuptools virtualenv virtualenvwrapper

    fi
}

alias findBadImagesHere='find . -name "*jpg" -exec jpeginfo -c {} \; | grep -E "WARNING|ERROR"'
function findBadImageNamesHere(){
    find . -name "*jpg" -exec jpeginfo -c {} \; | grep -E "WARNING|ERROR" | awk '{ print $1 }'
}

alias useTrim='sudo trimforce enable'

pushdp() {
  pushd "$(python -c "import os.path as _, ${1}; \
    print _.dirname(_.realpath(${1}.__file__[:-1]))"
  )"
}

title-term() {
    PROMPT_COMMAND="echo -ne '\033]0;${1}\007'"
}

fixtime() {
    sudo launchctl stop org.ntp.ntpd
    sudo launchctl start org.ntp.ntpd
}

require_find() {
    cd /Users/jasonpeace/src
    ~/dotfiles/scripts/require_find.py $1
    cd -  >/dev/null 2>&1
}

pf(){
    python -m pyflakes $1
}

htmlify_rst(){
    html_file=${1/'.rst'/'.html'}
    rst2html.py $rst_file $html_file
}

function psetup(){
    if [[ "$VIRTUAL_ENV" != "" ]]
    then
        p1=`echo $PWD | awk -F/ '{print "/"$2"/"$3"/"$4"/"$5}'`
        if [[ $p1 == *"//" ]]
        then
            echo "You are not in a source dir for a project.";
        else
            killPYC
            cd $p1
            python setup.py develop
            cd -
        fi
    else
        echo "You are not in a vitual env."
    fi
}

alias develop='psetup'

function fix_brew_permissions(){
    echo "Chowning /usr/local to $USER:admin"
    #sudo chown -R $USER:admin /usr/local
    sudo chown -R $USER:admin /usr/local/bin
    sudo chown -R $USER:admin /usr/local/share
    brew doctor
}

alias nml="~/dotfiles/scripts/nmlPlaylistToWorkfile"
alias prettier='prettier --print-width 80 --tab-width 4'

function git_ignore(){
    echo "Ignoring any changes to tracked file: '$1'"
    git update-index --assume-unchanged "$1"
}

function git_unignore(){
    echo "Rewatching any changes to tracked file: '$1'"
    git update-index --no-assume-unchanged "$1"
}

function git_list_ignored_files(){
    echo 'Git is ignoring these files:'
    git ls-files -v | grep -E "^[a-z]"
}



#grc stuff
GRC=`which grc`
if [ "$TERM" != dumb ] && [ -n "$GRC" ]
then
    alias colourify="$GRC -es --colour=auto"
    alias configure='colourify ./configure'
    alias diff='colourify diff'
    alias make='colourify make'
    alias gcc='colourify gcc'
    alias g++='colourify g++'
    alias as='colourify as'
    alias gas='colourify gas'
    alias ld='colourify ld'
    alias netstat='colourify netstat'
    alias ping='colourify ping'
    alias traceroute='colourify /usr/sbin/traceroute'
    alias head='colourify head'
    alias tail='colourify tail'
    alias dig='colourify dig'
    alias mount='colourify mount'
    alias ps='colourify ps'
    alias mtr='colourify mtr'
    alias df='colourify df'
fi

if [ -e ~/.amyrisrc ]; then
. ~/.amyrisrc
fi

alias git_aliases='git config --get-regexp alias'

alias ag="ag --ignore *gen* --ignore *vendor*"
alias ff38="open -a /Applications/Firefox38.app/Contents/macOS/firefox --args -P ff388"
alias firefox_default_profile="open -a /Applications/Firefox.app/Contents/macOS/firefox --args -P default"

function brew_dep_list(){
    while read cask; do
        echo -n "$cask ->";
        brew deps $cask | awk '{printf(" %s ", $0)}';
        echo "";
    done < <(brew list)
}

alias rsync='/usr/local/bin/rsync'
alias rsync_photos='sudo /usr/local/bin/rsync -PhaNHAXv  --delete --stats /Users/jasonpeace/Pictures/Photos\ Library\ 20191107.photoslibrary /Volumes/archive/Pictures'
alias rsync_tracks='sudo /usr/local/bin/rsync -PhaNHAXv  --delete --stats /Users/jasonpeace/Documents/Music/tracks/ /Volumes/archive/Tracks'

alias makeM3u='/Users/jasonpeace/dotfiles/scripts/m3ud2.sh'

function suppress_vlc_error_window(){
    if [ -e /Applications/VLC.app/Contents/Resources/English.lproj/ErrorPanel.nib ]
    then
        echo "Renaming /Applications/VLC.app/Contents/Resources/English.lproj/ErrorPanel.nib"
        mv /Applications/VLC.app/Contents/Resources/English.lproj/ErrorPanel.nib /Applications/VLC.app/Contents/Resources/English.lproj/ErrorPanel.orig
    else
        echo "/Applications/VLC.app/Contents/Resources/English.lproj/ErrorPanel.nib was not found"
    fi
}

alias git_unstash="git stash apply stash@{0}"

function git_delete_branch ()
{
    git checkout $1;
    git pull;
    git checkout master;
    git branch -d $1;
    git push origin :$1
}

function test_trs()
{

    curl -X POST -H "Content-Type: application/json" -d @./themis_test5.json http://vm:9003/themis_import_samples
}
